<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK04AACGQSAAjUYkAIpIKACTSicAlU4rAJlPKwCVUTAAu1ssALBf
        OAC4ZTsAvGg+AMVEBgDEaTwAu29JAMdvQwDlg1MA6IVUAOWHWAD5kV0AyYprANaRbwDTk3QA1Jh7APmU
        YgALfK4AbH+KAAAA/wBvmKgAeaKyAAOKxQABjssAVM/0AFXP9ABszuoAsbKyAN6kiQDfpYkA36mOAMam
        lgDJqpsA36uRAPengAD7sY0A5LGXAPy3kwDQtagA/b6gAPzEpwD4zLUA9tC9APzQuQCw094Au9DYAKbo
        8gDO0NMA3d3dAP7bxwD82sgA/trJAP7bygDx4NgA8+bfAOHr7wD15+AA+OzmAOzw8QDg9/oAC1R1AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAEI4AAAA5AAIC
        knwGAAAAqAc5AAAAOQA4rDkAmBCOAAAAAADcEo4AAOmRfAgCknz/////AgKSfHsBkny7AZJ8JgAAACYA
        AAAmAAAAmACSfChmEQCsEY4AIQCSfHgTBgA9AJJ8AAAAAA3/kXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmy6SfCBqAAD8Do4AAAAGALgTjgAA6ZF8mEKSfP//
        //+PQpJ8nNABAEUAAADwEI4AgAAQwLgTjgAA6ZF8QACSfP////8AAAAADf+RfCQSjgDvCYF8twAAAAIQ
        AACoE44AAQAAABgAAAAAAAAADBKOAEIAAAAAAAAA8BGOAAAAAAAAAAAAAAAAAAwAAAACAAAAAQGRfAD8
        /X+0AAAAAAAAAAMAAAC8ABoCMGYRAAAAAAAwZhEABQAAAD/hgHxIEo4AUxqAfNACAAAAAADAAAAAAAAA
        AAACAAAAgAAAAAAAAACME44A3+tKAAi09AAAAADAAAAAAHgSjgACAAAAgAAAAAAAAAAItPQArPSoABXs
        SgAMAAAAAAAAAAEAAABDOlxQBgAAAGFtbWVcTWljcm9zb2Z0IFZpc3VhbCBTdHVkaW8gOFxDb21tb243
        XFZTMjAwAAAAADisOQBicmFybN+RfIYOgXzQAgAAAAAAAAAAAAAAAAAABBOOADisOQAmAAAAAAAAAKYO
        gXwmAAAAqBOOACYAAACJ/kgAJgAAAAAAAAAmAAAA8BKOAAATjgC4E44AwJqDfLAOgXz/////pg6BfGzl
        SgDQAgAAOKw5ACYAAABUE44AAAAAABwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwAAAAAAAAAAAAAAAAAAAAAAQ0AFg8IBAYDAikAAAAAAAkJ
        DgA+FTMuEwsHAi8AAAAAAAAAAD8XMjEREAoFKAAAAAAAAAAAPhg9LBQSDAIAAAAAAAAAAAAmOzowKxkC
        AAAAAAAAAAAAQSc0PCobRSQAAAAAAAAAAABCLSUeIx9FOAAAAAAAAAAAAABDHTciGkUAAAAAAAAAAAAA
        ADYdNyEgAAAAAAAAAAAAAAAANh03IQAAAAAAAAAAAAAAAABANUQAAAAAAAAAAAAAAAAAAAAA//8AACAf
        AAAQBwAA+AMAAPwDAAD+AwAA/gEAAP8AAAD/wAAA/+AAAP/wAAD/+AAAKAAAABAAAAAgAAAAAQAgAAAA
        AABABAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArTgA/8VEBv8AAAAA1pFv/7tv
        Sf+VUTD/ikgo/5VOK/+NRiT/hkEg/8mqm/8AAAAAAAAAAAAAAAAAAAAAAAAAALtbLP+7Wyz/xGk8/wAA
        AADx4Nj/yYpr//bQvf/8t5P/5YdY/7hlO/+ZTyv/hkEg/9C1qP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPPm3//Tk3T/+My1//zEp//lg1P/x29D/7BfOP+TSif/xqaW/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8eDY/9SYe//+28r/+7GN//mRXf/ohVT/vGg+/4ZBIP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADfpYn//NrI//7bx//9vqD/96eA//mUYv+GQSD/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9efg/9+pjv/80Ln//trJ/9+rkf9sf4r/C1R1/7Gy
        sv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD47Ob/5LGX/96kif95orL/bM7q/wOK
        xf8LVHX/ztDT/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs8PH/b5io/6bo
        8v9Vz/T/C3yu/wtUdf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvQ
        2P9vmKj/pujy/1TP9P8Bjsv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAu9DY/2+YqP+m6PL/VM/0/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADh6+//sNPe/+D3+v8AAAAAAAAAAAAAAAAAAAAA//8AACAfAAAQBwAA+AMAAPwD
        AAD+AwAA/gEAAP8AAAD/wAAA/+AAAP/wAAD/+AAA
</value>
  </data>
</root>